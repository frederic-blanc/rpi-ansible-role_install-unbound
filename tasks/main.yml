---
- name: install unbound package and its dependencies
  apt:
    name:           "unbound"
    force_apt_get:  yes
  notify:
  - unbound restart
  become:           true
  
- name: download latest root DNS
  get_url:
    url:            "https://www.internic.net/domain/named.root"
    dest:           "/var/lib/unbound/root.hints"
    owner:          unbound
    group:          unbound
    mode:           '0644'
    force:          true
  notify:
  - unbound restart
  become:           true
  
- name: copy unbound conf
  template:
    src:            "unbound.j2"
    dest:           "/etc/unbound/unbound.conf.d/unbound.conf"
    owner:          root
    group:          root
    mode:           '0644'
  notify:
  - unbound reload
  become:           true
  
- name: copy static_routes conf
  template:
    src:            "static_routes.j2"
    dest:           "/etc/unbound/unbound.conf.d/static_routes.conf"
    owner:          root
    group:          root
    mode:           '0644'
  notify:
  - unbound reload
  become:           true
  
- name: create logs folder
  file:
    path:           "/var/log/unbound"
    state:          directory
    owner:          unbound
    group:          unbound
    mode:           '0755'
  notify:
  - unbound restart
  become:           true
  
# from https://b4d.sablun.org/blog/2018-09-27-when-unbound-wont-write-logs
- name: apparmor conf local for unbound log
  copy:
    dest:           "/etc/apparmor.d/local/usr.sbin.unbound"
    content:  |
      /var/log/unbound/unbound.log rw,
    owner:          root
    group:          root
    mode:           '0644'
  register:         apparmor_local_for_unbound
  notify:
  - unbound restart
  become:           true
  
- name: apparmor conf for unbound log
  copy:
    content:        ""
    dest:           "/etc/apparmor.d/usr.sbin.unbound"
    force:          no
    owner:          root
    group:          root
    mode:           '0644'
  register:         apparmor_for_unbound
  notify:
  - unbound restart
  become:           true
  
- name: reload apparmor conf if needed
  shell:            "apparmor_parser -r /etc/apparmor.d/usr.sbin.unbound"
  when:             apparmor_local_for_unbound is changed or apparmor_for_unbound is changed
  become:           true
  
# from https://blobfolio.com/2017/05/fix-linux-dns-issues-caused-by-systemd-resolved
- name: ensure /etc/NetworkManager/conf.d exists
  file:
    dest:           "/etc/NetworkManager/conf.d"
    state:          directory
    owner:          root
    group:          root
    mode:           '0755'
  become:           true
  
- name: Create network conf for unbound
  copy:
    dest:           "/etc/NetworkManager/conf.d/unbound.conf"
    content:  |
      [main]
      dns=unbound
    owner:          root
    group:          root
    mode:           '0644'
  register:         networking_conf_for_unbound
  notify:
  - unbound restart
  become:           true
  
- name: disable resolved DNSStubListener support
  lineinfile:
    path:           "/etc/systemd/resolved.conf"
    state:          present
    regexp:         '^#?DNSStubListener=.*$'
    line:           'DNSStubListener=no'
  register:         disable_dns_stub_listener_support
  become:           true
  
- name: restart systemd-resolved on disable DNSStubListener or network conf change
  systemd:
    state:          restarted
    name:           systemd-resolved
    daemon_reload:  true
  when:             networking_conf_for_unbound.changed or disable_dns_stub_listener_support.changed
  become:           true
  
- name: ensure service unbound-resolvconf is enable and not masked
  systemd:
    enabled:        yes
    masked:         no
    name:           unbound-resolvconf
  become:           true
  
- name: ensure service unbound is enable and not masked
  systemd:
    enabled:        yes
    masked:         no
    name:           unbound
  become:           true
  
- name: ensure service unbound is started
  systemd:
    state:          started
    name:           unbound
  register:         unbound_start
  become:           true
  